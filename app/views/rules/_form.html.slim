= form_for @rule do |form|
  - if rule.errors.any?
    #error_explanation
      h2
        = pluralize(rule.errors.count, "error")
        | prohibited this rule from being saved:
      ul
        - rule.errors.full_messages.each do |message|
          li= message
  .box
    .content.is-large[style='line-height: 3rem;']
      ' When bitcoin falls by
      .control.is-inline
        .select
          = form.select :change_percentage, options_for_select((1..50).map{|i| ["#{i}%", i.to_f]}), class: 'input is-inline has-text-right'
      ' % or more over
      .control.is-inline
        .select
          = form.select :change_period, @periods
      '  buy
      .control.is-inline
        .select
          = form.select :formula, @formulas
      '  using
      .field.is-inline
        = form.text_field :base_currency, class: 'input is-inline'

  /   a[href='#'] Configure limits

  / #limits.box.hidden
  /   .content.is-large[style='line-height: 3rem;']
  /     ' Limit the trade to
  /     = form.number_field :max_sats_per_trade, class: 'input is-inline'
  /     '  sats per trade.

  /   .content.is-large[style='line-height: 3rem;']
  /     ' Don't buy more than
  /     = form.number_field :max_sats_per_period, class: 'input is-inline'
  /     '  sats per
  /     .control.is-inline
  /       .select
  /         = form.select :max_period_in_secs, options_for_select([['day', 1.day], ['week', 1.week], ['month', 1.month]])

  .box
    .field
      = form.label 'Exchange', class: 'label'
      .control
        .select
          = form.select :exchange_name, @exchanges
      .columns
        .column
          .field
            = form.label :exchange_api_key, class: 'label'
            = form.text_field :exchange_api_key, class: 'input'
        .column
          .field
            = form.label :exchange_api_secret, class: 'label'
            = form.text_field :exchange_api_secret, class: 'input'
  .actions
    = form.submit class: 'button is-large is-primary '
