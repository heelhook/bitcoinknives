- if @rules.empty?
  section.hero.is-primary.is-bold.is-fullheight-with-navbar.is-vcentered
    .hero-body.has-text-centered
      .container
        h1.title[style="zoom: 4"] 🔪
        h1.title You ain't stacking nothing yet!
        .content.is-large
          p
            | You don't have any rules configured to stack sats
            |  like a boss yet.
          p Go ahead and get started!
        = link_to 'Add new buy rule', new_rule_path, class: 'button is-primary is-large is-rounded is-inverted'
- else
  section.section
    .container.narrow
      .columns.is-vcentered.is-centered.is-multiline
        - @rules.each do |rule|
          .column.is-three-quarters
            .card[class=rule.card_class data-controller='price-watcher' data-price-watcher-period=rule.change_period]
              .card-content[style='height: 17rem; overflow: scroll;']
                p.title[style='font-weight: normal;']
                  ' When bitcoin goes down by
                  b #{rule.change_percentage}% over #{rule.change_period}
                p.subtitle
                  | buy
                  code #{rule.formula}
                  |  with #{rule.base_currency}

                - unless rule.configured?
                  .columns.is-mobile.is-vcentered
                    .column.is-1
                      h1.title 😔
                    .column.is-6[style='padding-left: 2rem;']
                      p You still need to complete the configuration to get this bad boy to run.
                    .column
                      a.button.is-primary[data-chat] Need help?

                - if rule.trades.successful.count > 0
                  p= "🙌🏻 #{number_to_human(rule.total_sats_traded)} sats stacked"
                - if !RuleTraderPolicy.rule_within_trade_limits?(rule.object)
                  p
                    | You've reached the stacking limit for this period, stacking #{number_to_human(rule.total_sats_traded_in_period)} sats in the past #{rule.max_sats_per_period_length}
                  p
                    = link_to 'Want to increase your limit?', edit_rule_path(rule)
                - elsif RuleTraderPolicy.rule_traded_within_change_period?(rule.object)
                  p
                    | Stacked #{time_ago_in_words(rule.last_trade_time)} ago,
                    |  waiting to stack again for #{time_ago_in_words(rule.next_trade_time)}

              .card-footer
                = link_to 'Edit', edit_rule_path(rule), class: 'button is-inverted is-primary is-fullwidth is-large card-footer-item'
                - if !rule.configured?
                  = link_to 'Configure', edit_rule_path(rule), class: 'button is-inverted is-primary is-fullwidth is-large card-footer-item'
                - elsif rule.trades.count > 0
                  = link_to pluralize(rule.trades.count, 'trade'), rule_trades_path(rule), class: 'button is-inverted is-primary is-fullwidth is-large card-footer-item'
                .card-footer-item
                  p[class=rule.price_change_class]
                    span[data-target='price-watcher.price']
                      = "#{rule.price_change.round(2)}%"
                    span'  over #{rule.change_period}


      .columns.is-centered
        .column.is-half
          = link_to 'Add new buy rule', new_rule_path, class: 'button is-primary is-large is-fullwidth'
